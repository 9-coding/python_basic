# 리스트

'''
1. 인덱싱
2. 슬라이싱
3. 연산
4. 수정/삭제
5. 관련 함수
'''

# 1. 인덱싱
print("1. 인덱싱")

a = [1,2,3]

print(a)

print(a[0])

print(a[0] + a[2])

print(a[-1]) # 마지막 요소 출력

a = [1,2,['a','b','c']] # 중첩 리스트

print(a[2]) # 리스트의 값으로 리스트가 출력됨.

print(a[2][0]) # 리스트 요소인 리스트의 요소 출력



# 2. 슬라이싱
print("\n2. 슬라이싱")

print(a[0:2]) # 0에서 1까지의 인덱스를 가진 값 출력

print(a[2:]) # 2부터 마지막 인덱스까지

a = [1,2,3,['a','b','c'],4,5]
print(a[2:5]) # 2에서 4까지의 인덱스를 가진 값 출력 (리스트 포함)

print(a[3][:2]) # 리스트의 3번째 인덱스를 가지는 리스트에서 슬라이싱 수행



# 3. 연산
print("\n3. 연산")

a = [1,2,3]
b = [4,5,6]

print(a+b) # 리스트 더하기 : 1,2,3,4,5,6

print(a * 3) # 리스트 n번 반복

print(len(a)) # a 리스트의 길이 구함



# 4. 수정/삭제
print("\n4. 수정/삭제")

a = [1,2,3]

a[2] = 4
print(a) # 2번째 인덱스 값 수정

del a [1] # del 함수 사용해 1번째 요소 삭제
print(a)

a = [1,2,3,4,5]
del a[2:] # 슬라이싱 활용하여 여러 개 삭제
print(a)



# 5. 관련 함수
print("\n5. 관련 함수")

a = [1,2,3]
a.append(4) # 리스트의 맨 마지막에 괄호 안의 수를 추가한다.
print(a)

a.append([5,6]) # 리스트도 추가할 수 있다.
print(a)

a = [1,4,3,2]
a.sort() # 리스트 내부의 값을 정렬한다.
print(a)

a = ['a','c','b']
a.sort() # 문자도 정렬 가능.
print(a)

a = ['a','c','b']
a.reverse() # 리스트 내부 요소의 순서 뒤집음
print(a)

a = [1,2,3]
print(a.index(3)) # 리스트 요소의 인덱스 반환

a.insert(0,4) # insert(a,b) : 리스트의 a번쨰 위치에 b 삽입.
print(a)

a.insert(3,5)
print(a) # result : 4, 1, 2, 5, 3

a = [1,2,3,1,2,3]
a.remove(3) # 리스트에서 첫 번째로 나오는 괄호 안의 값을 삭제
print(a) # result : 1,2,1,2,3

a = [1,2,3]
print(a.pop()) # 리스트의 맨 마지막 요소 반환하고 그 요소는 삭제
print(a)

a = [1,2,3]
print(a.pop(1)) # 리스트의 n번쨰 요소를 돌려주고 그 요소는 삭제
print(a)

a = [1,2,3,1]
print(a.count(1)) # 리스트 안에 존재하는 괄호 안의 수의 개수를 반환.

a = [1,2,3]
a.extend([4,5]) # 리스트 확장. 원래의 리스트에 괄호 안의 리스트를 더함
print(a) # result : [1,2,3,4,5]

a.extend([6,7])
print(a) # result : [1,2,3,4,5,6,7]

# 튜플은 요소를 ()로 둘러싸고 생성/삭제/수정이 불가하다는 것을 제외하고 리스트와 동일하다.
# 따라서 튜플을 인덱싱하고 슬라이싱하는 것은 리스트와 동일하다.